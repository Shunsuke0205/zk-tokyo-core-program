{
  "name": "trnadocashlike",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "volta": {
    "node": "23.9.0"
  },
  "scripts": {
    "gen": "node script/generate_and_prepare.js",
    "build-circuit": "circom circuits/note.circom --r1cs --wasm --sym -l . -l node_modules -o build",
    "setup-keys": "cd build/note_js && npx snarkjs powersoftau new bn128 20 pot20_0000.ptau -v && npx snarkjs powersoftau contribute pot20_0000.ptau pot20_0001.ptau --name=\"First contribution\" -v && npx snarkjs powersoftau prepare phase2 pot20_0001.ptau pot20_final.ptau -v && npx snarkjs groth16 setup ../note.r1cs pot20_final.ptau note_0000.zkey && npx snarkjs zkey contribute note_0000.zkey note_0001.zkey --name=\"Second contribution\" -v && npx snarkjs zkey export verificationkey note_0001.zkey verification_key.json",
    "generate-witness": "cd build/note_js && node generate_witness.js note.wasm ../../input/test_data.json witness.wtns",
    "generate-proof": "cd build/note_js && npx snarkjs groth16 prove note_0001.zkey witness.wtns proof.json public.json",
    "verify-proof": "cd build/note_js && npx snarkjs groth16 verify verification_key.json public.json proof.json",
    "prove": "pnpm run generate-witness && pnpm run generate-proof && pnpm run verify-proof",
    "full-process": "pnpm run build-circuit && pnpm run gen && pnpm run setup-keys && pnpm run prove",
    "generate-contract": "cd build/note_js && npx snarkjs zkey export solidityverifier note_0001.zkey Verifier.sol"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "circomlib": "^2.0.5",
    "circomlibjs": "^0.1.7",
    "ethereum-cryptography": "^3.1.0",
    "snarkjs": "^0.7.5"
  }
}
